[{"/Users/shachipriya/Desktop/peach/src/index.js":"1","/Users/shachipriya/Desktop/peach/src/APP.jsx":"2","/Users/shachipriya/Desktop/peach/src/AppStyles.jsx":"3","/Users/shachipriya/Desktop/VideoSpeechWeb/src/index.js":"4","/Users/shachipriya/Desktop/VideoSpeechWeb/src/APP.jsx":"5","/Users/shachipriya/Desktop/VideoSpeechWeb/src/AppStyles.jsx":"6"},{"size":154,"mtime":1647521397672,"results":"7","hashOfConfig":"8"},{"size":3565,"mtime":1647533564821,"results":"9","hashOfConfig":"8"},{"size":352,"mtime":1647531631881,"results":"10","hashOfConfig":"8"},{"size":154,"mtime":1647521397672,"results":"11","hashOfConfig":"12"},{"size":3565,"mtime":1647533564821,"results":"13","hashOfConfig":"12"},{"size":352,"mtime":1647531631881,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"4hahh9",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j4d88k",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shachipriya/Desktop/peach/src/index.js",[],[],["35","36"],"/Users/shachipriya/Desktop/peach/src/APP.jsx",["37"],[],"import React,{useState} from \"react\";\nimport {Typography, AppBar, CardMedia, Grid, Button, Toolbar, Container, CssBaseline, Box, Link, TextField} from \"@mui/material\";\nimport SpeechRecognition,{useSpeechRecognition} from \"react-speech-recognition\";\nimport useStyles from \"./AppStyles\";\n\n\nfunction APP(){\n\n    const commands=[\"*\"];\n    const {transcript}=useSpeechRecognition({commands});\n\n    const classes=useStyles();\n\n    return(\n        <>\n        <CssBaseline />\n        <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"relative\" color=\"inherit\">\n            <Toolbar>\n                <Typography variant=\"h4\" component=\"div\" sx={{ flexGrow: 1 }} align=\"center\">\n                    Learn Words\n                </Typography>\n            </Toolbar>\n        </AppBar>\n        </Box>\n        <main>\n            <div className={classes.container}>\n                <Container>\n                    <div>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} xl={6} lg={6}>\n                                <CardMedia \n                                    component='iframe'\n                                    src=\"https://www.youtube.com/embed/59Z52tMFDhk\"\n                                    alt=\"clayVideos\"\n                                    height= \"360\"\n                                    width= \"auto\"\n                                    frameborder=\"0\" \n                                    allowfullscreen=\"allowfullscreen\"                      \n                                />\n                            </Grid>                          \n                            <Grid item xs={12} xl={6} lg={6}>\n                                <Typography variant=\"body2\" color=\"inherit\" gutterBottom>\n                                    CLAY:\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"inherit\">\n                                    Clay is a soft, loose earthy material containing particles.\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"inherit\" gutterBottom>\n                                    Now lets learn the spelling of CLAY:\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"inherit\" gutterBottom>\n                                    It is Spelled as : C L A Y\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"inherit\" gutterBottom>\n                                    Try to spell it:   \n                                </Typography>\n                                <Button sx={{marginRight:2, marginTop:1}} onClick={SpeechRecognition.startListening} variant=\"contained\" >Start</Button>\n                                <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" value={transcript} onChange={event => this.onInputChange(event.target.value)} />\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Container>\n            </div>\n        </main>\n        <footer className={classes.footer}>\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                Play Area\n            </Typography>\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" >\n                Copyright â“’ <Link href=\"#\" color=\"inherit\">Website</Link> 2022\n            </Typography>\n        </footer>\n        </>\n    );\n}\n\n\nexport default APP;\n\n","/Users/shachipriya/Desktop/peach/src/AppStyles.jsx",[],[],"/Users/shachipriya/Desktop/VideoSpeechWeb/src/index.js",[],[],"/Users/shachipriya/Desktop/VideoSpeechWeb/src/APP.jsx",["38"],[],"/Users/shachipriya/Desktop/VideoSpeechWeb/src/AppStyles.jsx",[],[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":15,"nodeType":"45","messageId":"46","endLine":1,"endColumn":23},{"ruleId":"43","severity":1,"message":"44","line":1,"column":15,"nodeType":"45","messageId":"46","endLine":1,"endColumn":23},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]